parcelRequire=function(e,r,n,t){function i(n,t){function o(e){return i(o.resolve(e))}function c(r){return e[n][1][r]||r}if(!r[n]){if(!e[n]){var l="function"==typeof parcelRequire&&parcelRequire;if(!t&&l)return l(n,!0);if(u)return u(n,!0);if(f&&"string"==typeof n)return f(n);var p=new Error("Cannot find module '"+n+"'");throw p.code="MODULE_NOT_FOUND",p}o.resolve=c;var a=r[n]=new i.Module(n);e[n][0].call(a.exports,o,a,a.exports,this)}return r[n].exports}function o(e){this.id=e,this.bundle=i,this.exports={}}var u="function"==typeof parcelRequire&&parcelRequire,f="function"==typeof require&&require;i.isParcelRequire=!0,i.Module=o,i.modules=e,i.cache=r,i.parent=u;for(var c=0;c<n.length;c++)i(n[c]);if(n.length){var l=i(n[n.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):t&&(this[t]=l)}return i}({5:[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nattribute vec2 vertexPosition; \n\nvoid main(){\n  gl_Position = vec4(vertexPosition, 0, 1);\n}\n";
},{}],6:[function(require,module,exports) {
module.exports="precision mediump float;\n#define GLSLIFY 1\n\nvoid main(){\n  gl_FragColor = vec4(0, 0, 1.0, 1.0);\n}";
},{}],4:[function(require,module,exports) {
"use strict";var r=require("./shaders/vertexShader.glsl"),e=t(r),a=require("./shaders/fragmentShader.glsl"),o=t(a);function t(r){return r&&r.__esModule?r:{default:r}}var n=void 0,d=void 0;function i(){n=document.getElementById("canvas"),(d=n.getContext("webgl"))||console.log('Your browser dosen"t support webgl'),n.height=d.canvas.clientHeight,n.width=d.canvas.clientWidth,d.viewport(0,0,d.canvas.width,d.canvas.height);var r=d.createShader(d.VERTEX_SHADER),a=d.createShader(d.FRAGMENT_SHADER);d.shaderSource(r,e.default),d.shaderSource(a,o.default),d.compileShader(r),d.getShaderParameter(r,d.COMPILE_STATUS)||(console.log("Error compiling shader!"),console.error("Shader error info: ",d.getShaderInfoLog(r))),d.compileShader(a),d.getShaderParameter(a,d.COMPILE_STATUS)||(console.log("Error compiling shader!"),console.error("Shader error info: ",d.getShaderInfoLog(a)));var t=d.createProgram();if(d.attachShader(t,r),d.attachShader(t,a),d.linkProgram(t),d.validateProgram(t),d.getProgramParameter(t,d.VALIDATE_STATUS)){var i=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,i);d.bufferData(d.ARRAY_BUFFER,new Float32Array([0,.5,.5,-.5,-.5,-.5]),d.STATIC_DRAW);var l=d.getAttribLocation(t,"vertexPosition");d.vertexAttribPointer(l,2,d.FLOAT,d.FALSE,2*Float32Array.BYTES_PER_ELEMENT,0*Float32Array.BYTES_PER_ELEMENT),d.enableVertexAttribArray(l),d.clearColor(.75,.9,1,1),d.useProgram(t),d.drawArrays(d.TRIANGLES,0,3)}else console.error("Error validating program ",d.getProgramInfoLog(t))}document.addEventListener("DOMContentLoaded",function(r){i()});
},{"./shaders/vertexShader.glsl":5,"./shaders/fragmentShader.glsl":6}]},{},[4], null)
//# sourceMappingURL=/triangle.24bcab58.map
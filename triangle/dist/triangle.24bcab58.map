{"version":3,"sources":["index.js"],"names":["canvas","gl","initWebGL","document","getElementById","getContext","console","log","height","clientHeight","width","clientWidth","viewport","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderSource","vertex","fragment","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","program","createProgram","attachShader","linkProgram","validateProgram","getProgramParameter","VALIDATE_STATUS","getProgramInfoLog","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertexArray","bufferData","Float32Array","STATIC_DRAW","positionAttribLocation","getAttribLocation","vertexAttribPointer","FLOAT","FALSE","BYTES_PER_ELEMENT","enableVertexAttribArray","clearColor","useProgram","drawArrays","TRIANGLES","addEventListener","e"],"mappings":"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","file":"triangle.24bcab58.map","sourceRoot":"..","sourcesContent":["import vertex from './shaders/vertexShader.glsl';\nimport fragment from './shaders/fragmentShader.glsl';\n\nlet canvas;\nlet gl;\nfunction initWebGL() {\n  canvas = document.getElementById('canvas');\n  gl = canvas.getContext('webgl');\n  if (!gl) {\n    console.log('Your browser dosen\"t support webgl');\n  }\n\n  canvas.height = gl.canvas.clientHeight;\n  canvas.width = gl.canvas.clientWidth;\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n  gl.shaderSource(vertexShader, vertex);\n  gl.shaderSource(fragmentShader, fragment);\n\n  gl.compileShader(vertexShader);\n  if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n    console.log('Error compiling shader!');\n    console.error('Shader error info: ', gl.getShaderInfoLog(vertexShader));\n  }\n  gl.compileShader(fragmentShader);\n  if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n    console.log('Error compiling shader!');\n    console.error('Shader error info: ', gl.getShaderInfoLog(fragmentShader));\n  }\n\n  const program = gl.createProgram();\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  gl.validateProgram(program);\n  if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\n    console.error('Error validating program ', gl.getProgramInfoLog(program));\n    return;\n  }\n\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n  // prettier-ignore\n  const vertexArray = [\n    // X, Y\n    0.0, 0.5,\n    0.5, -0.5,\n    -0.5, -0.5,\n  ];\n\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexArray), gl.STATIC_DRAW);\n  const positionAttribLocation = gl.getAttribLocation(program, 'vertexPosition');\n  gl.vertexAttribPointer(\n    positionAttribLocation,\n    2,\n    gl.FLOAT,\n    gl.FALSE,\n    2 * Float32Array.BYTES_PER_ELEMENT,\n    0 * Float32Array.BYTES_PER_ELEMENT,\n  );\n\n  gl.enableVertexAttribArray(positionAttribLocation);\n  gl.clearColor(0.75, 0.9, 1.0, 1.0);\n  gl.useProgram(program);\n  gl.drawArrays(gl.TRIANGLES, 0, 3);\n}\n\ndocument.addEventListener('DOMContentLoaded', (e) => {\n  initWebGL();\n});\n"]}